plugins {
    id 'java'
    id 'idea'
    id 'application'
}

group 'wright.john'
version '0.1.0-SNAPSHOT'

allprojects {
    repositories {
        mavenCentral()
        google()
    }
}

sourceSets.main.java.srcDirs = ["src/main/java"]

application {
    mainClass.set("wright.john.Main")
}



dependencies {


    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.22.0'
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.join(' '))
    }
}



//task createStartScripts(type: CreateStartScripts) {
//    unixStartScriptGenerator.template = resources.text.fromFile('bin/customUnixStartScript.txt')
//    windowsStartScriptGenerator.template = resources.text.fromFile('bin/customWindowsStartScript.txt')
//    applicationName("code-excercise")
//    mainClassName("wright.john.Main")
//    executableDir("bin")
//    outputDir = file('src/main')
//
//}

test {
    useJUnitPlatform()
}